package com.bizvpm.dps.server;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 * 
 */
@WebService(name = "IPersistence", targetNamespace = "http://server.dps.bizvpm.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface IPersistence {

	/**
	 * 
	 * @param manager
	 * @param status
	 */
	@WebMethod
	public void updateProcessManagerStatus(
			@WebParam(name = "manager", partName = "manager") PersistableProcessorManager manager,
			@WebParam(name = "status", partName = "status") int status);

	
	/**
	 * 
	 * @param status
	 * @return returns com.bizvpm.dps.server.ProcessorList
	 */
	@WebMethod
	public ProcessorList getProcessorList(
			@WebParam(name = "status", partName = "status") int status);

	/**
	 * 
	 * @param processorTypeId
	 * @return returns com.bizvpm.dps.server.HostList
	 */
	@WebMethod
	public StringList getOnlineProcessManager(
			@WebParam(name = "processorTypeId", partName = "processorTypeId") String processorTypeId);

	@WebMethod
	public void updateTaskStatus(
			@WebParam(name = "taskId", partName = "taskId") String taskId,
			@WebParam(name = "result", partName = "result") Result result,
			@WebParam(name = "status", partName = "status") String status);

	@WebMethod
	public void updateTaskStatusWithMessage(
			@WebParam(name = "taskId", partName = "taskId") String taskId,
			@WebParam(name = "result", partName = "result") Result result,
			@WebParam(name = "status", partName = "status") String status,
			@WebParam(name = "message", partName = "message") String message);

	@WebMethod
	public void removeTask(
			@WebParam(name = "taskId", partName = "taskId") String taskId);

	@WebMethod
	public void removeTaskList(
			@WebParam(name = "taskList", partName = "taskList") StringList StringList);

	@WebMethod
	public void removeTaskListByProcessorTypeId(
			@WebParam(name = "processorTypeId", partName = "processorTypeId") String processorTypeId);

	
	@WebMethod
	public String createTask(
			@WebParam(name = "host", partName = "host") String host,
			@WebParam(name = "processorTypeId", partName = "processorTypeId") String processorTypeId,
			@WebParam(name = "task", partName = "task") Task task);

	@WebMethod
	public TaskList getTaskList(
			@WebParam(name = "host", partName = "host") String host);

	@WebMethod
	public TaskList getTaskListByProcessorTypeId(
			@WebParam(name = "host", partName = "host") String host,
			@WebParam(name = "processorTypeId", partName = "processorTypeId") String processorTypeId
			);

	@WebMethod
	public void updateProcessManagerStatusByHosts(
			@WebParam(name = "hosts", partName = "hosts") StringList hosts,
			@WebParam(name = "status", partName = "status") int status);

	
	@WebMethod
	public boolean signin(
			@WebParam(name = "host", partName = "host") String host,
			@WebParam(name = "password", partName = "password") String password,
			@WebParam(name = "hostIp", partName = "hostIp") String hostIp,
			@WebParam(name = "hostPort", partName = "hostPort") int hostPort
			);
	
	@WebMethod
	public boolean signup(
			@WebParam(name = "host", partName = "host") String host,
			@WebParam(name = "password", partName = "password") String password,
			@WebParam(name = "hostIp", partName = "hostIp") String hostIp,
			@WebParam(name = "hostPort", partName = "hostPort") int hostPort
			);
	
	
	@WebMethod
	public String getHostAddress(
			@WebParam(name = "host", partName = "host") String host);

	@WebMethod
	public String ping();
	
}
